/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes} checked by tsc
 */
/**
 * @template T, L
 */
export class HashTable {
    constructor() {
        this.table = {};
    }
    /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    put(key, value) {
        this.table['v_' + key] = value;
        return this;
    }
    /**
     * @param {?} key
     * @return {?}
     */
    get(key) {
        return this.table['v_' + key];
    }
    /**
     * @return {?}
     */
    getAll() {
        const /** @type {?} */ vector = Array.from(Object.keys(this.table), k => this.table[k]);
        return vector;
    }
    /**
     * @return {?}
     */
    getKeys() {
        const /** @type {?} */ keys = Array.from(Object.keys(this.table), k => k.substring(2));
        return keys;
    }
    /**
     * @param {?} key
     * @return {?}
     */
    has(key) {
        if (typeof this.table['v_' + key] !== 'undefined') {
            return true;
        }
        return false;
    }
    /**
     * @param {?} key
     * @return {?}
     */
    remove(key) {
        delete this.table['v_' + key];
        return this;
    }
    /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    putArray(key, value) {
        if (typeof this.table['a_' + key] === 'undefined') {
            this.table['a_' + key] = [];
        }
        this.table['a_' + key].push(value);
        return this;
    }
    /**
     * @param {?} key
     * @return {?}
     */
    getArray(key) {
        if (typeof this.table['a_' + key] === 'undefined') {
            this.table['a_' + key] = [];
        }
        return this.table['a_' + key];
    }
    /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    removeArray(key, value) {
        if (typeof this.table['a_' + key] !== 'undefined') {
            this.table['a_' + key].splice(this.table['a_' + key].indexOf(value), 1);
        }
        return this;
    }
    /**
     * @param {?} key
     * @return {?}
     */
    hasArray(key) {
        if (typeof this.table['a_' + key] !== 'undefined') {
            return true;
        }
        else {
            return false;
        }
    }
    /**
     * @param {?} key
     * @param {?} value
     * @return {?}
     */
    hasinArray(key, value) {
        if (typeof this.table['a_' + key] !== 'undefined') {
            if (this.table['a_' + key].indexOf(value) !== -1) {
                return true;
            }
            return false;
        }
        else {
            return false;
        }
    }
    /**
     * @return {?}
     */
    size() {
        return Object.keys(this.table).length;
    }
    /**
     * ***********************************************
     * @param {?} callback
     * @return {?}
     */
    forEach(callback) {
        for (let /** @type {?} */ key in this.table) {
            callback(key.substring(2), this.table[key]);
        }
    }
}
function HashTable_tsickle_Closure_declarations() {
    /** @type {?} */
    HashTable.prototype.table;
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci1oYXNodGFibGUuY2xhc3MuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLWhhc2h0YWJsZS8iLCJzb3VyY2VzIjpbImxpYi9hbmd1bGFyLWhhc2h0YWJsZS5jbGFzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBR0EsTUFBTTtJQUdGO1FBQ0ksSUFBSSxDQUFDLEtBQUssR0FBRyxFQUFFLENBQUM7S0FDbkI7Ozs7OztJQUVNLEdBQUcsQ0FBQyxHQUFNLEVBQUUsS0FBUTtRQUN2QixJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUM7UUFDL0IsTUFBTSxDQUFDLElBQUksQ0FBQzs7Ozs7O0lBR1QsR0FBRyxDQUFDLEdBQU07UUFDYixNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUM7Ozs7O0lBRzNCLE1BQU07UUFDVCx1QkFBTSxNQUFNLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN2RSxNQUFNLENBQUMsTUFBTSxDQUFDOzs7OztJQUdYLE9BQU87UUFDVix1QkFBTSxJQUFJLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUN0RSxNQUFNLENBQUMsSUFBSSxDQUFDOzs7Ozs7SUFHVCxHQUFHLENBQUMsR0FBTTtRQUNiLEVBQUUsQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLEtBQUssV0FBVyxDQUFDLENBQUMsQ0FBQztZQUNoRCxNQUFNLENBQUMsSUFBSSxDQUFDO1NBQ2Y7UUFDRCxNQUFNLENBQUMsS0FBSyxDQUFDOzs7Ozs7SUFHVixNQUFNLENBQUMsR0FBTTtRQUNoQixPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDO1FBQzlCLE1BQU0sQ0FBQyxJQUFJLENBQUM7Ozs7Ozs7SUFHVCxRQUFRLENBQUMsR0FBTSxFQUFFLEtBQVE7UUFDNUIsRUFBRSxDQUFDLENBQUMsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsS0FBSyxXQUFXLENBQUMsQ0FBQyxDQUFDO1lBQ2hELElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztTQUMvQjtRQUNELElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUNuQyxNQUFNLENBQUMsSUFBSSxDQUFDOzs7Ozs7SUFHVCxRQUFRLENBQUMsR0FBTTtRQUNsQixFQUFFLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDaEQsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO1NBQy9CO1FBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDOzs7Ozs7O0lBRzNCLFdBQVcsQ0FBQyxHQUFNLEVBQUUsS0FBUTtRQUMvQixFQUFFLENBQUMsQ0FBQyxPQUFPLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxLQUFLLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDaEQsSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztTQUMzRTtRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUM7Ozs7OztJQUdULFFBQVEsQ0FBQyxHQUFNO1FBQ2xCLEVBQUUsQ0FBQyxDQUFDLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxJQUFJLEdBQUcsR0FBRyxDQUFDLEtBQUssV0FBVyxDQUFDLENBQUMsQ0FBQztZQUNoRCxNQUFNLENBQUMsSUFBSSxDQUFDO1NBQ2Y7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNKLE1BQU0sQ0FBQyxLQUFLLENBQUM7U0FDaEI7Ozs7Ozs7SUFHRSxVQUFVLENBQUMsR0FBTSxFQUFFLEtBQVE7UUFDOUIsRUFBRSxDQUFDLENBQUMsT0FBTyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsS0FBSyxXQUFXLENBQUMsQ0FBQyxDQUFDO1lBQ2hELEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQy9DLE1BQU0sQ0FBQyxJQUFJLENBQUM7YUFDZjtZQUNELE1BQU0sQ0FBQyxLQUFLLENBQUM7U0FDaEI7UUFBQyxJQUFJLENBQUMsQ0FBQztZQUNKLE1BQU0sQ0FBQyxLQUFLLENBQUM7U0FDaEI7Ozs7O0lBR0UsSUFBSTtRQUNQLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxNQUFNLENBQUM7Ozs7Ozs7SUFXbkMsT0FBTyxDQUFDLFFBQVE7UUFDbkIsR0FBRyxDQUFDLENBQUMscUJBQUksR0FBRyxJQUFJLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ3pCLFFBQVEsQ0FBQyxHQUFHLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztTQUMvQzs7Q0FFUiIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4qIFRoaXMgY2xhc3MgcmVwcmVzZW50cyB0aGUgY2xhc3MgZGVmaW5pdGlvbi5cbiovXG5leHBvcnQgY2xhc3MgSGFzaFRhYmxlPFQsIEw+IHtcbiAgICBwcml2YXRlIHRhYmxlOiBhbnk7XG5cbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgdGhpcy50YWJsZSA9IHt9O1xuICAgIH1cblxuICAgIHB1YmxpYyBwdXQoa2V5OiBULCB2YWx1ZTogTCk6IEhhc2hUYWJsZTxULCBMPiB7XG4gICAgICAgIHRoaXMudGFibGVbJ3ZfJyArIGtleV0gPSB2YWx1ZTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgcHVibGljIGdldChrZXk6IFQpOiBMIHtcbiAgICAgICAgcmV0dXJuIHRoaXMudGFibGVbJ3ZfJyArIGtleV07XG4gICAgfVxuXG4gICAgcHVibGljIGdldEFsbCgpOiBMW10ge1xuICAgICAgICBjb25zdCB2ZWN0b3IgPSBBcnJheS5mcm9tKE9iamVjdC5rZXlzKHRoaXMudGFibGUpLCBrID0+IHRoaXMudGFibGVba10pO1xuICAgICAgICByZXR1cm4gdmVjdG9yO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRLZXlzKCk6IHN0cmluZ1tdIHtcbiAgICAgICAgY29uc3Qga2V5cyA9IEFycmF5LmZyb20oT2JqZWN0LmtleXModGhpcy50YWJsZSksIGsgPT4gay5zdWJzdHJpbmcoMikpO1xuICAgICAgICByZXR1cm4ga2V5cztcbiAgICB9XG5cbiAgICBwdWJsaWMgaGFzKGtleTogVCk6IGJvb2xlYW4ge1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMudGFibGVbJ3ZfJyArIGtleV0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuXG4gICAgcHVibGljIHJlbW92ZShrZXk6IFQpOiBIYXNoVGFibGU8VCwgTD4ge1xuICAgICAgICBkZWxldGUgdGhpcy50YWJsZVsndl8nICsga2V5XTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgcHVibGljIHB1dEFycmF5KGtleTogVCwgdmFsdWU6IEwpOiBIYXNoVGFibGU8VCwgTD4ge1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMudGFibGVbJ2FfJyArIGtleV0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICB0aGlzLnRhYmxlWydhXycgKyBrZXldID0gW107XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy50YWJsZVsnYV8nICsga2V5XS5wdXNoKHZhbHVlKTtcbiAgICAgICAgcmV0dXJuIHRoaXM7XG4gICAgfVxuXG4gICAgcHVibGljIGdldEFycmF5KGtleTogVCk6IEwge1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMudGFibGVbJ2FfJyArIGtleV0gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICB0aGlzLnRhYmxlWydhXycgKyBrZXldID0gW107XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMudGFibGVbJ2FfJyArIGtleV07XG4gICAgfVxuXG4gICAgcHVibGljIHJlbW92ZUFycmF5KGtleTogVCwgdmFsdWU6IEwpOiBIYXNoVGFibGU8VCwgTD4ge1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMudGFibGVbJ2FfJyArIGtleV0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICB0aGlzLnRhYmxlWydhXycgKyBrZXldLnNwbGljZSh0aGlzLnRhYmxlWydhXycgKyBrZXldLmluZGV4T2YodmFsdWUpLCAxKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcztcbiAgICB9XG5cbiAgICBwdWJsaWMgaGFzQXJyYXkoa2V5OiBUKTogYm9vbGVhbiB7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy50YWJsZVsnYV8nICsga2V5XSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgfVxuXG4gICAgcHVibGljIGhhc2luQXJyYXkoa2V5OiBULCB2YWx1ZTogTCk6IGJvb2xlYW4ge1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMudGFibGVbJ2FfJyArIGtleV0gIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgICAgICBpZiAodGhpcy50YWJsZVsnYV8nICsga2V5XS5pbmRleE9mKHZhbHVlKSAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIHB1YmxpYyBzaXplKCk6IG51bWJlciB7XG4gICAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLnRhYmxlKS5sZW5ndGg7XG4gICAgfVxuXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgICAvLyBGb3JFYWNoIEZ1bmN0aW9uXG4gICAgLy8gZm9yRWFjaChjYWxsYmFjazogZnVuY3Rpb24oa2V5LHZhbHVlKSApXG4gICAgLy8gQGNhbGxiYWNrOiBBIENhbGxiYWNrIGZ1bmN0aW9uIHVzZSB0byBpdGVyYXRlIHRoZSBPYmplY3QgIFxuICAgIC8vXG4gICAgLy8gSXRlcmF0ZSBhbGwgb2JqZWN0cyBIYXNodGFibGVcbiAgICAvLyBBIHVzZWQgbGlrZSBhcmd1bWVudHMgaW4gdGhlIGNhbGxiYWNrIGZ1bmN0aW9uXG4gICAgLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi9cbiAgICBwdWJsaWMgZm9yRWFjaChjYWxsYmFjayk6IHZvaWQge1xuICAgICAgICBmb3IgKGxldCBrZXkgaW4gdGhpcy50YWJsZSkge1xuICAgICAgICAgICAgY2FsbGJhY2soa2V5LnN1YnN0cmluZygyKSwgdGhpcy50YWJsZVtrZXldKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbiJdfQ==